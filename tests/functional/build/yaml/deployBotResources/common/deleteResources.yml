parameters:
  - name: azureSubscription
    displayName: Azure Service Connection
    type: string

  - name: resourceGroup
    displayName: Resource Group
    type: string

  - name: resourceName
    displayName: Resource Name
    type: string

  - name: resourceSuffix
    displayName: Azure resources' name suffix 
    type: string

steps:
  - task: AzureCLI@2
    displayName: "Delete pre-existing bot resources"
    inputs:
      azureSubscription: "${{ parameters.azureSubscription }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "Looking for ${{ parameters.resourceGroup }}..."
        if ((az group exists -n "${{ parameters.resourceGroup }}") -eq "true") {
            Write-Host "Found pre-existing resource group ${{ parameters.resourceGroup }}."
            Write-Host "Starting resource cleanup..."

            Write-Host ("Deleting '" + "${{ parameters.resourceName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)" + "'...")
            az webapp delete --name "${{ parameters.resourceName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)" --resource-group ${{ parameters.resourceGroup }} --keep-empty-plan
            az bot delete --name "${{ parameters.resourceName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)" --resource-group ${{ parameters.resourceGroup }}

            Write-Host "Pre-existing bot resources for '${{ parameters.resourceName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)' deleted."
        } else {
            Write-Host "Resource group not found."
            Write-Host "##vso[task.complete result=Failed;]"
            return
        }
