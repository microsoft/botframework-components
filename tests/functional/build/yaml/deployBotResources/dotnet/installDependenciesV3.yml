parameters:
  - name: packages
    displayName: Dependency Packages
    type: object

  - name: project
    displayName: Project
    type: object

  - name: registry
    displayName: Registry source
    type: string

  - name: version
    displayName: Version number
    type: string

steps:
  - task: PowerShell@2
    displayName: 'Install dependencies'
    inputs:
      targetType: inline
      workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.project.directory }}'
      failOnStderr: true
      script: |
        $version = ""
        $source = ""

        if (-not ([string]::IsNullOrEmpty("${{ parameters.version }}"))) {
          $version = "-Version ""${{ parameters.version }}"""
        }

        if (-not ([string]::IsNullOrEmpty("${{ parameters.registry }}"))) {
          $source = "-Source ""${{ parameters.registry }}"""
        }

        foreach ($package in "${{ parameters.packages }}".Split()) {
          Invoke-Expression "nuget update ""./packages.config"" -Id $package $version $source"
        }
        
        write-host "`nPackages:"
        foreach ($package in "${{ parameters.packages }}".Split()) {
          write-host "  - $package "
        }
