[import](common.lg)



# SendActivity_Q6rGL1()
- You have no more events scheduled.


# SendActivity_meJEs5()
- The event titled ${conversation.FocusedMeeting.Title} is on ${formatDateTime(conversation.FocusedMeeting.StartTime, 'yyyy-MM-dd')} at ${formatDateTime(conversation.FocusedMeeting.StartTime, 'HH:mm:ss')} with ${GetAttendeeString(conversation.FocusedMeeting.Attendees)}. 

# SendActivity_EckUyy()
[Activity
    Attachments = ${json(MeetingDetailCard(formatDateTime(conversation.FocusedMeeting.StartTime), formatDateTime(conversation.FocusedMeeting.EndTime), 'UTC', if(dialog.attendeesPhoto == null, [], dialog.attendeesPhoto), conversation.FocusedMeeting.Title, conversation.FocusedMeeting.Location, conversation.FocusedMeeting.Content, conversation.FocusedMeeting.OnlineMeetingUrl))}
]

# SendActivity_GHfVi1()
- You have no more events scheduled.
# SendActivity_vk2DNJ()
- This is the first page.

# SendActivity_j8oUwP()
- ${CalendarErrorMessage()}
# SendActivity_Activity_XbyJiQ()
- It starts at ${formatDateTime(conversation.FocusedMeeting.StartTime, 'HH:mm:ss')} and ends at ${formatDateTime(conversation.FocusedMeeting.EndTime, 'HH:mm:ss')}.
# SendActivity_Activity_g6qzeJ()
- It holds with ${GetAttendeeString(conversation.FocusedMeeting.Attendees)}
# SendActivity_Activity_VFdPeh()
- It lasts for ${GetMeetingDuration((ticks(formatDateTime(conversation.FocusedMeeting.EndTime)) - ticks(formatDateTime(conversation.FocusedMeeting.StartTime))) / 600000000)}.
# SendActivity_Activity_FayrF4()
- The location is ${conversation.FocusedMeeting.Location}.

# activity_yCls4e()
- You have the following event on your calendar:
# activity_GxpiC0()
- You have one meeting ${dialog.ShowingMeetingCondition}: ${conversation.FocusedMeeting.Title}. It's with ${GetAttendeeString(conversation.FocusedMeeting.Attendees)} ${formatDateTime(conversation.FocusedMeeting.StartTime, 'HH:mm:ss')}.

# activity_wGb0eY()
- You have the following event on your calendar:

# prompt_bqUDX2()
- Do you want to review your calendar overview again for ${formatDateTime(dialog.startDateTime, 'yyyy-MM-dd')}? You can also ask me to update or decline this event for you.

# ConfirmInput_Prompt_JSASJZ()
- Do you want me to read the details for the first event? I can read the details for any event, just let me know which one by providing the subject, time, or attendees.
# ConfirmInput_UnrecognizedPrompt_JSASJZ()
- Not recognized, please retry
# ConfirmInput_DefaultValueResponse_JSASJZ()
- Sorry, I don't understand
# SendActivity_Qfr1b9()
- Sorry, I don't understand
# SendActivity_rDwZpJ()
[Activity
    Text = You have ${count(dialog.meetingsList)} events planned for ${formatDateTime(dialog.startDateTime, 'yyyy-MM-dd')}. The first one is ${dialog.meetingsList[0].Title} with ${GetAttendeeString(dialog.meetingsList[0].Attendees)} at ${formatDateTime(dialog.meetingsList[0].StartTime, 'HH:mm:ss')}. The last one for ${formatDateTime(dialog.startDateTime, 'yyyy-MM-dd')} is ${turn.lastMeeting.Title} at ${formatDateTime(turn.lastMeeting.StartTime, 'HH:mm:ss')} with ${GetAttendeeString(turn.lastMeeting.Attendees)}.
    Attachments = ${json(MeetingListCard('Meetings', count(dialog.meetingsList), int(dialog.overlapCount), formatDateTime(dialog.startDateTime, 'yyyy-MM-dd'), GetIndicator(dialog.currentPage, int(settings.DisplaySize), count(dialog.meetingsList)), dialog.mePhotoResult.photo, 'Powered by **Microsoft**', 'UTC', dialog.displayMeetingData, true))}
]
