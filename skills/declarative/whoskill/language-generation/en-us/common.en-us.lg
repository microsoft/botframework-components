# WhoWelcomeMessage()
- Hi. I'm Who bot. I can answer questions about people in your organization, like "Who reports to Patti?" or "Who is Allan?".

# DidntUnderstandMessage()
- Sorry, I didn't understand what you meant.
- I didn't understand, perhaps try again in a different way.
- Can you try to ask in a different way?
- I didn't get what you mean, can you try in a different way?
- Could you elaborate?
- Please say that again in a different way.
- I didn't quite get that.
- Can you say that in a different way?
- Can you try to ask me again? I didn't get what you mean.

# HelpMessage()
- ```
Need help? Here's a list of the questions I can answer:
	Who is Jane?
	Who are Jack's peers?
	Who is Roger's manager?
	Who does Emma work with?
	Who reports to Julie?
```

# AlreadyLastPage()
- Already last page.

# AlreadyFirstPage()
- Already first page.

# NoKeyword()
- Please provide the name you want to look up.

# MultiSearchResult(Keyword)
- I found multiple matches for '${Keyword}'. Please pick one.

# NoSearchResult(Keyword)
- Sorry, I couldnâ€™t find anyone named '${Keyword}'

# CardForItem(Person)
- ```
{
	"type": "AdaptiveCard",
	"id": "WhoCard",
	"body": [{
		"type": "Container",
		"spacing": "Large",
		"items": [{
			"type": "ColumnSet",
			"columns": [{
				"type": "Column",
				"items": [{
					"type": "ColumnSet",
					"columns": [{
						"type": "Column",
						"verticalContentAlignment": "Center",
						"items": [{
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"size": "Large",
							"weight": "Bolder",
							"text": "${Person.DisplayName}",
							"wrap": true
						}],
						"width": "stretch"
					}]
				}, {
					"type": "ColumnSet",
					"spacing": "Medium",
					"columns": [{
						"type": "Column",
						"verticalContentAlignment": "Center",
						"items": [{
							"type": "TextBlock",
							"size": "Medium",
							"text": "${Person.JobTitle}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.Department}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.OfficeLocation}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.BusinessPhones}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.MobilePhone}"
						}],
						"width": "stretch"
					}]
				}],
				"width": 50
			}, {
				"type": "Column",
				"items": [{
					"type": "Image",
					"style": "Person",
					"url": "${Person.PhotoUrl}",
					"size": "Medium"
				}],
				"width": "auto",
				"verticalContentAlignment": "Center"
			}]
		}]
	}, {
		"type": "Container",
		"items": [{
			"type": "ColumnSet",
			"columns": [{
				"type": "Column",
				"items": [{
					"type": "ActionSet",
					"actions": [{
						"type": "Action.Submit",
						"title": "Manager",
						"data": "Who is the manager of ${Person.UserPrincipalName}?"
					}]
				}],
				"width": "auto"
			}, {
				"type": "Column",
				"items": [{
					"type": "ActionSet",
					"actions": [{
						"type": "Action.Submit",
						"title": "Peers",
						"data": "Who are the peers of ${Person.UserPrincipalName}"
					}]
				}],
				"width": "auto"
			}],
			"separator": true
		}],
		"spacing": "Medium",
		"separator": true
	}],
	"$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
	"version": "1.0"
}
```

# CardForActionItem(Person)
- ```
{
	"type": "AdaptiveCard",
	"id": "WhoCard",
	"body": [{
		"type": "Container",
		"spacing": "Large",
		"items": [{
			"type": "ColumnSet",
			"columns": [{
				"type": "Column",
				"items": [{
					"type": "ColumnSet",
					"columns": [{
						"type": "Column",
						"verticalContentAlignment": "Center",
						"items": [{
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"size": "Large",
							"weight": "Bolder",
							"text": "${Person.DisplayName}",
							"wrap": true
						}],
						"width": "stretch"
					}]
				}, {
					"type": "ColumnSet",
					"spacing": "Medium",
					"columns": [{
						"type": "Column",
						"verticalContentAlignment": "Center",
						"items": [{
							"type": "TextBlock",
							"size": "Medium",
							"text": "${Person.JobTitle}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.Department}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.OfficeLocation}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.BusinessPhones}"
						}, {
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"spacing": "Small",
							"size": "Medium",
							"text": "${Person.MobilePhone}"
						}],
						"width": "stretch"
					}]
				}],
				"width": 50
			}, {
				"type": "Column",
				"items": [{
					"type": "Image",
					"style": "Person",
					"url": "${Person.PhotoUrl}",
					"size": "Medium"
				}],
				"width": "auto",
				"verticalContentAlignment": "Center"
			}]
		}]
	}],
	"$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
	"version": "1.0"
}
```

# CardForList(Persons)
- ${join(createArray(CardForListHead(), CardForListBody(Persons), CardForListTail()), ' ')}

# CardForListHead()
- ```
{
    "type": "AdaptiveCard",
    "id": "WhoCard",
    "body": [
        {
            "type": "Container",
            "spacing": "Large",
            "items": [
```

# CardForListBody(Persons)
- ${join(foreach(Persons, x, CardForListItem(x)), ', ')}

# CardForListTail()
- ```
            ]
        }
    ],
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "version": "1.0"
}
```

# CardForListItem(Person)
- ```
{
	"type": "ColumnSet",
	"columns": [{
			"type": "Column",
			"items": [{
				"type": "Image",
				"style": "Person",
				"url": "${Person.PhotoUrl}",
				"size": "Medium"
			}],
			"verticalContentAlignment": "Center"
		},
		{
			"type": "Column",
			"items": [{
					"type": "ColumnSet",
					"columns": [{
						"type": "Column",
						"verticalContentAlignment": "Center",
						"items": [{
							"type": "TextBlock",
							"horizontalAlignment": "Left",
							"size": "Large",
							"weight": "Bolder",
							"text": "${Person.DisplayName}",
							"wrap": true
						}],
						"width": "stretch"
					}]
				},
				{
					"type": "ColumnSet",
					"columns": [{
						"type": "Column",
						"verticalContentAlignment": "Center",
						"items": [{
							"type": "TextBlock",
							"size": "Medium",
							"text": "${Person.JobTitle}"
						}],
						"width": "stretch"
					}]
				}
			],
			"width": "200px"
		},
		{
			"type": "Column",
			"items": [{
				"type": "ActionSet",
				"actions": [{
					"type": "Action.Submit",
					"title": "Detail",
					"data": "${Person.ActionTitle}"
				}]
			}],
			"width": "70px",
			"verticalContentAlignment": "Center",
			"horizontalAlignment": "Right"
		}
	],
	"separator": true
}
```

# WhoIs(Person)
- Here's what I found for ${Person.DisplayName}:

# JobTitle(Person)
- '${Person.DisplayName}' is a ${Person.jobTitle}.

# Department(Person)
- '${Person.DisplayName}' works in ${Person.Department}.

# Location(Person)
- '${Person.DisplayName}' works in ${Person.officeLocation}.

# PhoneNumber(Person)
- The phone number for '${Person.DisplayName}' is ${Person.BusinessPhones}.

# EmailAddress(Person)
- The e-mail address of '${Person.DisplayName}' is ${Person.mail}.

# Manager(Person)
- I found the manager of '${Person.DisplayName}'.

# NoManager(Person)
- '${Person.DisplayName}' doesn't report to anyone.

# DirectReports(Number, Person)
- ${Number} people currently report to '${Person.DisplayName}':

# NoDirectReports(Person)
- '${Person.DisplayName}' has no direct reports.

# Peers(Number, Person)
- I found ${Number} people who have the same manager as '${Person.DisplayName}'.

# NoPeers(Person)
- There are no other people that have the same manager as '${Person.DisplayName}'.

# PeopleEmailsRencently(Number)
- You exchanged emails with at least ${Number} people.

# NoPeopleEmailsRencently()
- Sorry, I couldn't find anyone that you exchanged emails.

# PeopleEmailsAboutKeywordRencently(Number, Keyword)
- You exchanged emails with at least ${Number} people about '${Keyword}'.

# NoPeopleEmailsAboutKeywordRencently(Keyword)
- Sorry, I couldn't find anyone that you exchanged emails regarding '${Keyword}'.

# PeopleMeetsRencently(Number)
- You met with at least ${Number} people recently.

# NoPeopleMeetsRencently()
- Sorry, I couldn't find anyone that you met with recently.

# PeopleMeetsAboutKeywordRencently(Number, Keyword)
- You met with at least ${Number} people recently about '${Keyword}'.

# NoPeopleMeetsAboutKeywordRencently(Keyword)
- Sorry, I couldn't find anyone that you met with recently regarding '${Keyword}'.
