steps:
  - ${{ if eq(parameters.deploymentRing, 'alpha') }}: 
    - powershell: |
        Write-Host "ALPHA"
        $deploymentRing = 'alpha';
        Write-Host "##vso[task.setvariable variable=DeploymentRing;]$deploymentRing";
        Write-Host "Set environment variable to ($env:DeploymentRing)"

  - ${{ if eq(parameters.deploymentRing, 'preview') }}: 
    - powershell: |
        Write-Host "PREVIEW"
        $deploymentRing = 'preview';
        Write-Host "##vso[task.setvariable variable=DeploymentRing;]$deploymentRing";
        Write-Host "Set environment variable to ($env:DeploymentRing)"

  - ${{ if eq(parameters.deploymentRing, 'release') }}: 
    - powershell: |
        Write-Host "RELEASE"
        $deploymentRing = 'release';
        Write-Host "##vso[task.setvariable variable=DeploymentRing;]$deploymentRing";
        Write-Host "Set environment variable to ($env:DeploymentRing)"

  - powershell: |
      $dateStamp = (Get-Date -format "yyyyMMdd");
      $commitHash = "$(Build.SourceVersion)".SubString(0,7);
      $vs = $dateStamp + "." + $commitHash;

      if ($deploymentRing -ne 'release') {
        $vs = $deploymentRing + "." + $vs;
      } 

      Write-Host "##vso[task.setvariable variable=VersionSuffix;]$vs";
      "Resolved VersionSuffix = $vs";
    displayName: 'Resolve package version variables'

  - task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0
    displayName: 'Tag build with version'
    inputs:
      tags: |
       Preview: $(VersionSuffix)
    continueOnError: true
    enabled: false
