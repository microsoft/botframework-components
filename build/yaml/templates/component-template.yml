stages:
  # Only runs for packages that won't be published, as the build step is also included in the stage_package_node stage below. This
  # stage is skipped for packages to be published.
  - stage: stage_build_node
    displayName: 'Node: Build Only'
    condition: and(or(eq(variables.ComponentType, 'declarativeAsset'), eq(variables.ComponentType, 'generator'), and(eq(variables.ComponentType, 'codeExtension'), eq(variables.Language, 'js'))), not(eq(variables.PublishPackageArtifacts, true)))
    jobs:
      - job: job_build_npm
        displayName: Build & Test Node project
        steps:
        - template: yarn-build-steps.yml
        - template: yarn-test-steps.yml
        - template: debug-workspace-steps.yml

  - stage: stage_package_node
    displayName: 'Node: Build, Test, Version & Pack'
    condition: and(or(eq(variables.ComponentType, 'declarativeAsset'), eq(variables.ComponentType, 'generator'), and(eq(variables.ComponentType, 'codeExtension'), eq(variables.Language, 'js'))), eq(variables.PublishPackageArtifacts, true))
    jobs:
      - job: pack_npm
        displayName: 'Build & Pack Node project'
        steps:
        - template: yarn-build-steps.yml
        - template: yarn-test-steps.yml
        - template: npm-versioning-steps.yml
        - template: yarn-package-steps.yml
        - template: debug-workspace-steps.yml

  - stage: stage_build_nuget
    displayName: '.NET: Build & Test'
    dependsOn: [] # this removes the implicit dependency on previous stage and causes this to run in parallel
    condition: and(eq(variables.ComponentType, 'codeExtension'), eq(variables.Language, 'dotnet'))
    jobs:
      - job: build_test_dotnet
        displayName: Build and test .csproj with dotnet
        steps:
        - template: dotnet-install-sdk-steps.yml
        - template: dotnet-build-test-steps.yml

  - stage: stage_package_nuget
    displayName: '.NET: Version, Sign & Pack'
    dependsOn: stage_build_nuget
    condition: and(or(and(eq(variables.ComponentType, 'codeExtension'), eq(variables.Language, 'dotnet')), eq(variables.ComponentType, 'declarativeAsset')), eq(variables.PublishPackageArtifacts, true))
    jobs:
      - job: job_pack_dotnet
        displayName: Pack .csproj with dotnet cli
        condition: eq(variables.ComponentType, 'codeExtension')
        steps:
        - template: nuget-versioning-steps.yml
        - template: dotnet-install-sdk-steps.yml
        - template: dotnet-package-steps.yml
        - template: nuget-signing-steps.yml
      - job: job_pack_nuspec
        displayName: Pack .nuspec with nuget
        condition: eq(variables.ComponentType, 'declarativeAsset')
        steps:
        - template: nuget-versioning-steps.yml
        - template: nuspec-package-steps.yml
        - template: nuget-signing-steps.yml
