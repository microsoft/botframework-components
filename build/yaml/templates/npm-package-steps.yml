steps:
- task: NodeTool@0
  displayName: 'Install Node 14.x'
  inputs:
    versionSpec: '14.x'

- powershell: |
    # Get existing version from package.json
    $packageJson = Get-Content package.json;
    $packageJsonData = $packageJson | ConvertFrom-Json;

    "VERSION: $($packageJsonData.version)";
    "SUFFIX: $(NpmVersionSuffix)";
    $packageJsonData.version += "-" + "$(NpmVersionSuffix)";

    # Convert back into package.json
    $packageJsonData | ConvertTo-Json |
      Out-File package.json -Encoding utf8
  displayName: 'Replace version in package.json'
  condition: ne(variables.DeploymentRing, 'stable')
  workingDirectory: $(WorkingDirectory)
  
- script: |
    npm install
  displayName: 'Install dependencies'
  workingDirectory: '$(WorkingDirectory)'

- script: |
    npm pack
  displayName: 'Generate package'
  workingDirectory: '$(WorkingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy npm files'
  inputs:
    SourceFolder: '$(WorkingDirectory)'
    Contents: '*.tgz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\npm'

- task: PublishBuildArtifacts@1
  displayName: 'Publish the npm package'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\npm'
    ArtifactName: 'npm'
    publishLocation: 'Container'
