steps:
- task: NodeTool@0
  displayName: 'Install Node 14.x'
  inputs:
    versionSpec: '14.x'

- powershell: |
    if (Test-Path -Path package.json) {
      # Get existing version from package.json
      $packageJson = Get-Content package.json;
      $packageJsonData = $packageJson | ConvertFrom-Json;
      "Provided version = $packageJsonData.version";

      $packageVersion = "$(NpmPackageVersion)";
      "Resolved version = $packageVersion"
      # Convert back into package.json
      $packageJsonData.version = $packageVersion;
      $packageJsonData | ConvertTo-Json |
      Out-File package.json -Encoding utf8
    } else {
        Write-Host "Missing package.json"
        exit 1
    }
    displayName: 'Set package.json version with NpmPackageVersion variable'
    workingDirectory: $(WorkingDirectory)
  
- script: |
    npm install
  displayName: 'Install dependencies'
  workingDirectory: '$(WorkingDirectory)'

- script: |
    npm pack
  displayName: 'Generate package'
  workingDirectory: '$(WorkingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy npm files'
  inputs:
    SourceFolder: '$(WorkingDirectory)'
    Contents: '*.tgz'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\npm'

- task: PublishBuildArtifacts@1
  displayName: 'Publish the npm package'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\npm'
    ArtifactName: 'npm'
    publishLocation: 'Container'
