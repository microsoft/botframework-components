parameters:
  - name: appId
    displayName: Bot's App Registration Id
    type: string

  - name: appSecret
    displayName: Bot's App Registration Secret
    type: string

  - name: azureSubscription
    displayName: Azure Service Connection
    type: string

  - name: botName
    displayName: Bot Name
    type: string

  - name: botGroup
    displayName: Bot's Resource Group
    type: string

  - name: connectionName
    displayName: OAuth Connection Name
    type: string

  - name: resourceSuffix
    displayName: Azure resources' name suffix
    type: string

steps:
  - task: AzureCLI@2
    displayName: "Configure OAuth connection"
    inputs:
      azureSubscription: "${{ parameters.azureSubscription }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $connectionName = if([string]::IsNullOrEmpty("${{ parameters.connectionName }}")) { "TestOAuthProvider" } Else { "${{ parameters.connectionName }}" };

        # Create OAuth Connection.
        az bot show -g "${{ parameters.botGroup }}" -n "${{ parameters.botName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)"
        az bot authsetting create -g "${{ parameters.botGroup }}" -n "${{ parameters.botName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)" -c $connectionName --client-id="${{ parameters.appId }}" --client-secret="${{ parameters.appSecret }}" --service "oauth2" --provider-scope-string '""' --parameters authorizationUrl=https://webjobs.botframework.com/api/testauthprovider/authorize tokenUrl=https://webjobs.botframework.com/api/testauthprovider/token refreshUrl=https://webjobs.botframework.com/api/testauthprovider/refresh clientId="${{ parameters.appId }}" clientSecret="${{ parameters.appSecret }}"

        # Add ConnectionName to Azure AppSettings.
        az webapp config appsettings set --name "${{ parameters.botName }}${{ parameters.resourceSuffix }}-$(BUILD.BUILDID)" --resource-group ${{ parameters.botGroup }} --settings "ConnectionName=$connectionName" --output none
