#
# Deploys the bot resources needed for the Skills Functional Tests.
#

name: "$(BUILD.BUILDID)"
trigger: none
pr: none

pool:
  vmImage: "windows-2022"

parameters:
  - name: dependenciesVersionDotNetHosts
    displayName: DotNet Hosts Version
    type: string
    default: $env:DEPENDENCIESVERSIONDOTNETHOSTS

  - name: dependenciesRegistryDotNetHosts
    displayName: DotNet Hosts Registry
    type: string
    default: Artifacts
    values:
    - Artifacts
    - MyGet
    - NuGet

  - name: dependenciesVersionJSHosts
    displayName: JS Hosts Version
    type: string
    default: $env:DEPENDENCIESVERSIONJSHOSTS

  - name: dependenciesRegistryJSHosts
    displayName: JS Hosts Registry
    type: string
    default: MyGet
    values:
    - MyGet
    - Npm

variables:
  BuildConfiguration: "Debug"
  BuildPlatform: "AnyCPU"
  ## Azure Resources (Define these variables in Azure)
  # AzureSubscription: Service Connection Name to Manage Azure resources.
  # AppServicePlanGroup: (optional) Name of the Resource Group where the Windows App Service Plan is located.
  # AppServicePlanGroupLinux: (optional) Name of the Resource Group where the Linux App Service Plan is located.
  # AppServicePlanDotNetName: (optional) Name of the DotNet App Service Plan.
  # AppServicePlanJSName: (optional) Name of the JavaScript App Service Plan.
  # BotPricingTier: (optional) Pricing Tier for the bots, default F0.
  # ResourceGroup: (optional) Name of the Resource Group where the bots will be deployed.
  # ResourceSuffix: (optional) Suffix to add to the resources' name to avoid collitions.

  ## Bots Configuration (Define these variables in Azure)
  # BfcfnEmptyBotDotNetWebAppId: (optional) App Id for BfcfnEmptyBotDotNetWebApp bot.
  # BfcfnEmptyBotDotNetWebAppSecret: (optional) App Secret for BfcfnEmptyBotDotNetWebApp bot.
  # BfcfnEmptyBotDotNetFunctionsId: (optional) App Id for BfcfnEmptyBotDotNetFunctions bot.
  # BfcfnEmptyBotDotNetFunctionsSecret: (optional) App Secret for BfcfnEmptyBotDotNetFunctions bot.
  # BfcfnEmptyBotJSWebAppId: (optional) App Id for BfcfnEmptyBotJSWebApp bot.
  # BfcfnEmptyBotJSWebAppSecret: (optional) App Secret for BfcfnEmptyBotJSWebApp bot.
  # BfcfnEmptyBotJSFunctionsId: (optional) App Id for BfcfnEmptyBotJSFunctions bot.
  # BfcfnEmptyBotJSFunctionsSecret: (optional) App Secret for BfcfnEmptyBotJSFunctions bot.
  # ConnectionName: (optional) Name for the OAuth connection to use in the skill bots.

  ## DependenciesVersion (Define these variables in Azure) Possible values are: Latest (default), Stable, or specific version numbers.
  # DependenciesVersionDotNetHosts: (optional) Bot Builder dependency version to use for DotNet host bots.

  ## Internal variables
  InternalAppInsightsName: 'bfcfnappinsights$(INTERNALRESOURCESUFFIX)'
  InternalAppServicePlanWindowsResourceGroup: $[coalesce(variables['APPSERVICEPLANGROUP'], 'bfcfnshared')]
  InternalAppServicePlanLinuxResourceGroup: $[coalesce(variables['APPSERVICEPLANGROUPLINUX'], 'bfcfnshared-linux')]
  InternalAppServicePlanDotNetName: $[coalesce(variables['APPSERVICEPLANDOTNETNAME'], 'bfcfnbotsappservicedotnet$(INTERNALRESOURCESUFFIX)')]
  InternalAppServicePlanJSName: $[coalesce(variables['APPSERVICEPLANJSNAME'], 'bfcfnbotsappservicejs$(INTERNALRESOURCESUFFIX)')]
  InternalKeyVaultName: 'bfcfnbotkeyvault$(INTERNALRESOURCESUFFIX)'
  InternalResourceGroupName: $[coalesce(variables['RESOURCEGROUP'], 'bfcfnbots')]
  InternalResourceSuffix: $[coalesce(variables['RESOURCESUFFIX'], '')]

  NugetSecurityAnalysisWarningLevel: warn # Workaround: Sets the warning level of injected nuget security analysis to raise a warning in logs and set status to green. Visit https://aka.ms/nugetmultifeed for more details.

stages:
# Resource Groups
  - template: common/prepareResources.yml
    parameters:
      azureSubscription: "$(AZURESUBSCRIPTION)"
      resourceGroups: 
        - id: "Prepare_DotNetGroup"
          name: "$(INTERNALRESOURCEGROUPNAME)-DotNet"
          displayName: "Prepare DotNet's Resource Group"

        - id: "Prepare_JSGroup"
          name: "$(INTERNALRESOURCEGROUPNAME)-JS"
          displayName: "Prepare JS's Resource Group"

# DotNet
  - template: dotnet/deploy.yml
    parameters:
      appInsight: "$(INTERNALAPPINSIGHTSNAME)"
      appServicePlan: "$(INTERNALAPPSERVICEPLANDOTNETNAME)"
      appServicePlanRG: "$(INTERNALAPPSERVICEPLANWINDOWSRESOURCEGROUP)"
      azureSubscription: "$(AZURESUBSCRIPTION)"
      botPricingTier: $env:BOTPRICINGTIER
      connectionName: $env:CONNECTIONNAME
      keyVault: "$(INTERNALKEYVAULTNAME)"
      resourceGroup: "$(INTERNALRESOURCEGROUPNAME)-DotNet"
      resourceSuffix: $(INTERNALRESOURCESUFFIX)
      bots:
        - name: "bfcfnemptybotdotnetwebapp"
          dependsOn: "Prepare_DotNetGroup"
          type: "Host"
          displayName: "DotNet Web App Empty Bot"
          appId: $(BFCFNEMPTYBOTDOTNETWEBAPPID)
          appSecret: $(BFCFNEMPTYBOTDOTNETWEBAPPSECRET)
          project:
            generator: 'generators/generator-bot-empty'
            integration: "webapp"
            name: "EmptyBotDotNetWebApp"
            netCoreVersion: "6.0.x"
            platform: "dotnet"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}

        - name: "bfcfnemptybotdotnetfunctions"
          dependsOn: "Prepare_DotNetGroup"
          type: "Host"
          displayName: "DotNet Functions Empty Bot"
          appId: $(BFCFNEMPTYBOTDOTNETFUNCTIONSID)
          appSecret: $(BFCFNEMPTYBOTDOTNETFUNCTIONSSECRET)
          project:
            generator: 'generators/generator-bot-empty'
            integration: "functions"
            name: "EmptyBotDotNetFunctions"
            netCoreVersion: "6.0.x"
            platform: "dotnet"
          dependency:
            registry: ${{ parameters.dependenciesRegistryDotNetHosts }}
            version: ${{ parameters.dependenciesVersionDotNetHosts }}      

# JS
  - template: js/deploy.yml
    parameters:
      appInsight: "$(INTERNALAPPINSIGHTSNAME)"
      appServicePlan: "$(INTERNALAPPSERVICEPLANJSNAME)"
      appServicePlanRG: "$(INTERNALAPPSERVICEPLANWINDOWSRESOURCEGROUP)"
      azureSubscription: "$(AZURESUBSCRIPTION)"
      botPricingTier: $env:BOTPRICINGTIER
      connectionName: $env:CONNECTIONNAME
      dependsOn: "Prepare_JSGroup"
      keyVault: "$(INTERNALKEYVAULTNAME)"
      resourceGroup: "$(INTERNALRESOURCEGROUPNAME)-JS"
      resourceSuffix: $(INTERNALRESOURCESUFFIX)
      bots:
        - name: "bfcfnemptybotjswebapp"
          type: "Host"
          displayName: "JS Web App Empty Bot"
          appId: $(BFCFNEMPTYBOTJSWEBAPPID)
          appSecret: $(BFCFNEMPTYBOTJSWEBAPPSECRET)
          project:
            generator: "generators/generator-bot-empty"
            integration: "webapp"
            name: "EmptyBotJSWebApp"
            platform: "js"
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSHosts }}
            version: ${{ parameters.dependenciesVersionJSHosts }}

        - name: "bfcfnemptybotjsfunctions"
          type: "Host"
          displayName: "JS Functions Empty Bot"
          appId: $(BFCFNEMPTYBOTJSFUNCTIONSID)
          appSecret: $(BFCFNEMPTYBOTJSFUNCTIONSSECRET)
          project:
            generator: "generators/generator-bot-empty"
            integration: "functions"
            name: "EmptyBotJSFunctions"
            platform: "js"
          dependency:
            registry: ${{ parameters.dependenciesRegistryJSHosts }}
            version: ${{ parameters.dependenciesVersionJSHosts }}

# Publish variables
  - stage: "Publish_Variables"
    displayName: "Publish Variables"
    dependsOn: []
    jobs:
      - job: "Publish_Variables"
        displayName: "Publish Variables"
        steps:
          - powershell: |
              $variables = @{
                deploymentBuildSuffix = "$(BUILD.BUILDID)"
              }
              Write-Host $variables
              New-Item -Path "$(SYSTEM.DEFAULTWORKINGDIRECTORY)" -Name "variables" -ItemType "directory"
              $variables | ConvertTo-Json | Out-File "$(SYSTEM.DEFAULTWORKINGDIRECTORY)/Variables/variables.json"
            displayName: "Create Variables file"

          - task: PublishPipelineArtifact@1
            displayName: "Publish Variables as artifact"
            inputs:
              targetPath: "$(SYSTEM.DEFAULTWORKINGDIRECTORY)/variables"
              artifactName: Variables
