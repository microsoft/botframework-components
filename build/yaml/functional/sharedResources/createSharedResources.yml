#
# Creates the shared resources needed for the Skills Functional Tests.
#

name: $(BUILD.BUILDID)
trigger: none
pr: none

pool:
  vmImage: "windows-2022"

variables:
  ## Azure Resources (Define these variables in Azure)
  # AzureSubscription: Service Connection Name to Manage Azure resources.
  # KeyVaultObjectId: Suscription's Object Id to create the keyvault to store App Registrations.
  # AppServicePlanPricingTier: (optional) Pricing Tier for App Service Plans, default F1.
  # ResourceGroupName: (optional) Name of the Resource Group for the shared resources.
  # ResourceSuffix: (optional) Suffix to add to the resources' name to avoid collitions.

  ## Internal variables
  InternalAppInsightsName: "bfcfnappinsights$($env:RESOURCESUFFIX)"
  InternalAppServicePlanDotNetName: "bfcfnbotsappservicedotnet$($env:RESOURCESUFFIX)"
  InternalAppServicePlanJSName: "bfcfnbotsappservicejs$($env:RESOURCESUFFIX)"
  InternalCosmosDBName: "bfcfnbotstatedb$($env:RESOURCESUFFIX)"
  InternalStorageName: "bfcfnbotstorage$($env:RESOURCESUFFIX)"
  InternalKeyVaultName: "bfcfnbotkeyvault$($env:RESOURCESUFFIX)"
  InternalResourceGroupName: $[coalesce(variables['RESOURCEGROUPNAME'], 'bfcfnshared')]

  NugetSecurityAnalysisWarningLevel: warn # Workaround: Sets the warning level of injected nuget security analysis to raise a warning in logs and set status to green. Visit https://aka.ms/nugetmultifeed for more details.

stages:
- stage: Create_Resource_Group_Windows
  displayName: "Create Resource Group (Windows)"
  jobs:
    - job: Create_Resource_Group_Windows
      displayName: "Create steps"
      steps:
      - checkout: none
      - task: AzureCLI@2
        displayName: "Create $(INTERNALRESOURCEGROUPNAME)"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: "az group create --name $(INTERNALRESOURCEGROUPNAME) --location westus"

- stage: Create_Resource_Group_Linux
  displayName: "Create Resource Group (Linux)"
  dependsOn: []
  jobs:
    - job: Create_Resource_Group_Linux
      displayName: "Create steps"
      steps:
      - checkout: none
      - task: AzureCLI@2
        displayName: "Create $(INTERNALRESOURCEGROUPNAME)-linux"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: "az group create --name $(INTERNALRESOURCEGROUPNAME)-linux --location westus"

- stage: Create_CosmosDB
  displayName: "Create CosmosDB"
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_Cosmos_DB
      displayName: "Deploy steps"
      steps:
      - task: AzureCLI@2
        displayName: "Deploy CosmosDB"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: "az deployment group create --name $(INTERNALCOSMOSDBNAME) --resource-group $(INTERNALRESOURCEGROUPNAME) --template-file build/arm/template-cosmosdb-resources.json --parameters accountName=$(INTERNALCOSMOSDBNAME) databaseName=$(INTERNALCOSMOSDBNAME)"

- stage: Create_Key_Vault
  displayName: "Create Key Vault"
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_Key_Vault
      displayName: "Deploy steps"
      steps:
      - task: AzureCLI@2
        displayName: "Deploy Key Vault"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: "az deployment group create --name $(INTERNALKEYVAULTNAME) --resource-group $(INTERNALRESOURCEGROUPNAME) --template-file build/arm/template-key-vault-resources.json --parameters keyVaultName=$(INTERNALKEYVAULTNAME) objectId=$(KEYVAULTOBJECTID)"

- stage: Create_App_Registrations
  displayName: "Create App Registrations"
  dependsOn: Create_Key_Vault
  jobs:
    - job: Create_App_Registrations
      displayName: "Create steps"
      steps:
      - checkout: none
      - template: createAppRegistrations.yml
        parameters: 
          azureSubscription: $(AZURESUBSCRIPTION)
          keyVault: "$(INTERNALKEYVAULTNAME)"
          resourceSuffix: $env:RESOURCESUFFIX
          servicePrincipalId: $env:SERVICEPRINCIPALID
          servicePrincipalKey: $env:SERVICEPRINCIPALKEY
          tenantId: $env:TENANTID

- stage: Create_App_Service_Plan_DotNet
  displayName: "Create App Service Plan (DotNet)"
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_App_Service_Plan_DotNet
      displayName: "Deploy steps"
      steps:
      - task: AzureCLI@2
        displayName: "Deploy App Service Plan (DotNet)"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $appServicePlanPricingTier = if ($env:APPSERVICEPLANPRICINGTIER) { "newAppServicePlanSku=$env:APPSERVICEPLANPRICINGTIER" }
            az deployment group create --name "$(INTERNALAPPSERVICEPLANDOTNETNAME)" --resource-group "$(INTERNALRESOURCEGROUPNAME)" --template-file build/arm/template-service-plan-windows-resources.json --parameters $appServicePlanPricingTier newAppServicePlanName="$(INTERNALAPPSERVICEPLANDOTNETNAME)"

- stage: Create_App_Service_Plan_JS
  displayName: "Create App Service Plan (JS)"
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_App_Service_Plan_JS
      displayName: "Deploy steps"
      steps:
      - task: AzureCLI@2
        displayName: "Deploy App Service Plan (JS)"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $appServicePlanPricingTier = if ($env:APPSERVICEPLANPRICINGTIER) { "newAppServicePlanSku=$env:APPSERVICEPLANPRICINGTIER" }
            az deployment group create --name "$(INTERNALAPPSERVICEPLANJSNAME)" --resource-group "$(INTERNALRESOURCEGROUPNAME)" --template-file build/arm/template-service-plan-windows-resources.json --parameters $appServicePlanPricingTier newAppServicePlanName="$(INTERNALAPPSERVICEPLANJSNAME)"

- stage: Create_App_Insights
  displayName: "Create App Insights"
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_App_Insights
      displayName: "Deploy steps"
      steps:
      - task: AzureCLI@2
        displayName: "Deploy App Insights"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: "az deployment group create --name $(INTERNALAPPINSIGHTSNAME) --resource-group $(INTERNALRESOURCEGROUPNAME) --template-file build/arm/template-app-insights-resources.json --parameters appInsightsName=$(INTERNALAPPINSIGHTSNAME)"
          
- stage: Create_Blob_Storage
  displayName: "Create Blob Storage"
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_Blob_Storage
      displayName: "Deploy steps"
      steps:
      - task: AzureCLI@2
        displayName: "Deploy Blob Storage"
        inputs:
          azureSubscription: $(AZURESUBSCRIPTION)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: "az deployment group create --name $(INTERNALSTORAGENAME) --resource-group $(INTERNALRESOURCEGROUPNAME) --template-file build/arm/template-storage-resources.json --parameters storageAccountsName=$(INTERNALSTORAGENAME)"
