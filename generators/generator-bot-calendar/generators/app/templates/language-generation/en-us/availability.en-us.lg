[Common](common.en-us.lg)
[Event](event.en-us.lg)
[Schedule](schedule.en-us.lg)

# FirstEventResponseText(event)
- You start ${BuildDate(event.start.dateTime)}, at ${BuildTime(event.start.dateTime)}, with ${event.Subject}.

# LastEventResponseText(event)
- Your day ends at ${BuildTime(event.end.dateTime)}. Your last meeting is ${event.Subject}.

# NextEventResponseText(event)
- Here’s what’s next:

# EventResponseText(event)
- Here's what I found:

# TimeTillNextMeetingResponseText(diff)
- You have ${MakeDiffTime(diff)} until your next meeting starts.

# MakeDiffTime(diff)
- IF: ${ diff < 60 }
    - ${MakeMinute(diff)}
- ELSEIF: ${ mod(diff, 60) == 0}
    - ${MakeHour(diff)}
- ELSE:
    - ${MakeHour(diff)} and ${MakeMinute(diff)}
    
# MakeMinute(diff)
- IF: ${ mod(diff, 60) == 1 }
    - ${mod(diff, 60)} minute
- ELSE:
    - ${mod(diff, 60)} minutes

# MakeHour(diff)
- IF: ${ div(diff, 60) == 1 }
    - ${div(diff, 60)} hour
- ELSE:
    - ${div(diff, 60)} hours


# CheckAvailabilityBusyResponseText(events, time)
- I've found ${count(events)} events for you at ${BuildTime(time)}:

# CheckAvailabilityFreeResponseText(time)
- You don't have anything scheduled for ${BuildTime(time)}.

# FoundAvailableTimeResponseText(time)
- I've found a break in your schedule at ${BuildTime(time)}.

# FoundNoAvailableTimeResponseText()
- Looks like you don't have any breaks today during working hours.

# AvailabilityList(items)
- ${ExpandableListCardBody(foreach(items, item, if(item.isFreeTime==true, AvailabilityItem(item), ScheduleItem(item))), 5)}

# AvailabilityItem(item)
- ```
{
    "type": "Container",
    "separator": true,
    "spacing": "medium",
    "items": [
        {
            "type": "ColumnSet",
            "columns": [
                {
                    "type": "Column",
                    "width": "30",
                    "items": [
                        {
                            "type": "TextBlock",
                            "horizontalAlignment": "Right",
                            "text": "${formatDateTime(item.start, 'h:mm')} - ${formatDateTime(item.end, 'h:mm tt')}",
                            "weight": "Bolder"
                        }
                    ]
                },
                {
                    "type": "Column",
                    "width": "70",
                    "items": [
                        {
                            "type": "TextBlock",
                            "text": "[Available]",
                            "spacing": "Small",
                            "color": "Good"
                        }
                    ]
                }
            ]
        }
    ]
}
```

# AvailabilityActions
- ```
{
    "type": "ActionSet",
    "actions": [
        {
            "type": "Action.Submit",
            "title": "New event",
            "data": "New event"
        }
    ]
}
```
